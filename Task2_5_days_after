
require 'time'

# set method taken time from user and returns new dates in according to task
def five_day(usertime)
  begin
    # string time from user parse to Time.class
    formated_time = Time.parse(usertime)
    #change time to readable time which we will contain into array
    arraytime =formated_time.strftime("%a, %d %b %Y %H:%M:%S")
    array = []
    array.push (arraytime)


    # define and set intervals in sec
    minute15 = 15*60
    minute30 = 30*60
    hour = 60*60
    day = 24*60*60

    # using loop, define new dates for user  in according to given intevals puting these new dates into array
    for i in 1..24
      if i<5 then
        formated_time +=minute15
        arraytime = formated_time.strftime("%a, %d %b %Y %H:%M:%S")
        array[i]=arraytime
      end
      if i>=5&&i<13 then
        formated_time +=minute30
        arraytime = formated_time.strftime("%a, %d %b %Y %H:%M:%S")
        array[i]=arraytime
      end
      if i>=13&&i<20 then
        formated_time +=hour
        arraytime = formated_time.strftime("%a, %d %b %Y %H:%M:%S")
        array[i]=arraytime
      end
      if i>=20 then
        formated_time +=day
        arraytime = formated_time.strftime("%a, %d %b %Y %H:%M:%S")
        array[i]=arraytime
      end
      end

    puts array
  end
end
puts "Outputs"
puts "*"*25
five_day('Sun, 26 Feb 2017 23:35:00')
puts "*"*25
five_day('Sun, 26 Feb 2017')
puts "*"*25
five_day('26/02/2017')

=begin
 Outputs
*************************
Sun, 26 Feb 2017 23:35:00
Sun, 26 Feb 2017 23:50:00
Mon, 27 Feb 2017 00:05:00
Mon, 27 Feb 2017 00:20:00
Mon, 27 Feb 2017 00:35:00
Mon, 27 Feb 2017 01:05:00
Mon, 27 Feb 2017 01:35:00
Mon, 27 Feb 2017 02:05:00
Mon, 27 Feb 2017 02:35:00
Mon, 27 Feb 2017 03:05:00
Mon, 27 Feb 2017 03:35:00
Mon, 27 Feb 2017 04:05:00
Mon, 27 Feb 2017 04:35:00
Mon, 27 Feb 2017 05:35:00
Mon, 27 Feb 2017 06:35:00
Mon, 27 Feb 2017 07:35:00
Mon, 27 Feb 2017 08:35:00
Mon, 27 Feb 2017 09:35:00
Mon, 27 Feb 2017 10:35:00
Mon, 27 Feb 2017 11:35:00
Tue, 28 Feb 2017 11:35:00
Wed, 01 Mar 2017 11:35:00
Thu, 02 Mar 2017 11:35:00
Fri, 03 Mar 2017 11:35:00
Sat, 04 Mar 2017 11:35:00
*************************
Sun, 26 Feb 2017 00:00:00
Sun, 26 Feb 2017 00:15:00
Sun, 26 Feb 2017 00:30:00
Sun, 26 Feb 2017 00:45:00
Sun, 26 Feb 2017 01:00:00
Sun, 26 Feb 2017 01:30:00
Sun, 26 Feb 2017 02:00:00
Sun, 26 Feb 2017 02:30:00
Sun, 26 Feb 2017 03:00:00
Sun, 26 Feb 2017 03:30:00
Sun, 26 Feb 2017 04:00:00
Sun, 26 Feb 2017 04:30:00
Sun, 26 Feb 2017 05:00:00
Sun, 26 Feb 2017 06:00:00
Sun, 26 Feb 2017 07:00:00
Sun, 26 Feb 2017 08:00:00
Sun, 26 Feb 2017 09:00:00
Sun, 26 Feb 2017 10:00:00
Sun, 26 Feb 2017 11:00:00
Sun, 26 Feb 2017 12:00:00
Mon, 27 Feb 2017 12:00:00
Tue, 28 Feb 2017 12:00:00
Wed, 01 Mar 2017 12:00:00
Thu, 02 Mar 2017 12:00:00
Fri, 03 Mar 2017 12:00:00
*************************
Sun, 26 Feb 2017 00:00:00
Sun, 26 Feb 2017 00:15:00
Sun, 26 Feb 2017 00:30:00
Sun, 26 Feb 2017 00:45:00
Sun, 26 Feb 2017 01:00:00
Sun, 26 Feb 2017 01:30:00
Sun, 26 Feb 2017 02:00:00
Sun, 26 Feb 2017 02:30:00
Sun, 26 Feb 2017 03:00:00
Sun, 26 Feb 2017 03:30:00
Sun, 26 Feb 2017 04:00:00
Sun, 26 Feb 2017 04:30:00
Sun, 26 Feb 2017 05:00:00
Sun, 26 Feb 2017 06:00:00
Sun, 26 Feb 2017 07:00:00
Sun, 26 Feb 2017 08:00:00
Sun, 26 Feb 2017 09:00:00
Sun, 26 Feb 2017 10:00:00
Sun, 26 Feb 2017 11:00:00
Sun, 26 Feb 2017 12:00:00
Mon, 27 Feb 2017 12:00:00
Tue, 28 Feb 2017 12:00:00
Wed, 01 Mar 2017 12:00:00
Thu, 02 Mar 2017 12:00:00
Fri, 03 Mar 2017 12:00:00
=end